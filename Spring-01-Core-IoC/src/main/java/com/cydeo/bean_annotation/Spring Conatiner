
         SPRING CONTAINER :
IoC Container is tasked with the responsibility of connecting beans together to build a working application and it does so by reading
   a configuration provided by developer.
IoC container is external authority that passes a dependency to a dependent object that will use.
Having an external responsible for injecting dependencies allows very loosely coupled applications to built.


           SPRING BEANS :
Spring Bean is simply Java Object.
A bean is an object that is created and managed by Spring Container.
Spring beans are created from POJOs.

        Types of Spring container
There are 2 types of IoC containers :
Spring BeanFactory Container
Spring ApplicationContext Container


   Spring  Bean Factory Container
It is defined by org.springframework.beans.factory.BeanFactory interface.
Root interface for accessing spring bean container
Some implementation classes are : (https://docs.spring.io/spring-framework/docs/current/javadoc-api/
org/springframework/beans/factory/BeanFactory.html)
XmlBeanFactory
DefaultListableBeanFactory


**********Adding new beans to the spring context
There are multiple ways to add beans in the Spring context
==>Using the @Bean annotation
      Define a configuration class (annotated with @Configuration).  Add to the configuration class a method that returns the object instance
         that you want to add to the context and annotate the method with the @Bean annotation.
     Make Spring use the configuration class defined in the first step.


==>Using stereotype annotations
Using the @Component annotation, mark the classes for which you want Spring to add an instance into its context.
Using @ComponentScan annotation over the configuration class, instruct Spring where to find the classes you marked for being managed by the framework.


Adding dependency short cut is command + n